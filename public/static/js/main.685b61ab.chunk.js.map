{"version":3,"sources":["components/Auth.js","components/Title.js","components/NavBar.js","components/EditSong.js","components/Song.js","components/AddSong.js","components/Tracklist.js","components/Note.js","components/AddNote.js","components/Notes.js","components/Album.js","components/AddAlbum.js","components/AlbumList.js","components/Profile.js","components/App.js","reportWebVitals.js","index.js"],"names":["Auth","user","setUser","useState","username","setUsername","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","err","console","log","error","type","name","placeholder","autoComplete","value","onChange","target","errors","Title","NavBar","className","to","EditSong","song","setIsEditing","handleUpdateSong","setName","album_id","setAlbum_Id","artist","setArtist","spotify_link","setSpotify_Link","is_writer","setIs_Writer","is_performer","setIs_Performer","is_producer","setIs_Producer","is_engineer","setIs_Engineer","albums","setAlbums","useEffect","updatedSong","id","disabled","map","album","title","checked","onClick","Song","handleDeleteSong","isEditing","src","artwork_url","alt","width","height","role","aria-label","AddSong","setShowAddSong","addNewSong","spotify","setSpotify","newSongData","newSong","reset","Tracklist","songs","setSongs","showAddSong","updatedSongs","filter","Note","note","datestamp","created_at","split","text","AddNote","setShowAddNotes","addNewNote","setText","song_id","setSong_Id","newNoteData","newNote","style","resize","Notes","notes","setNotes","showAddNotes","Album","handleDeleteAlbum","release_date","genre","AddAlbum","setShowAddAlbum","addNewAlbum","setTitle","artwork","setArtwork","releaseDate","setReleaseDate","setGenre","newAlbumData","newAlbum","AlbumList","showAddAlbum","updatedAlbums","Profile","length","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.685b61ab.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nfunction Auth({user, setUser}) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n\n  // Sign Up\n  function handleSignupSubmit(e){\n    e.preventDefault();\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        \"username\":newUsername,\n        \"password\":newPassword,\n        \"password_confirmation\":passwordConfirm,\n      }),\n    }).then((r)=> {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      } else {\n        r.json().then((err) => console.log(err.errors))\n      }\n    });\n  }\n\n  // Log In\n  function handleLoginSubmit(e) {\n    e.preventDefault();\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n    .then(r => {\n      if (r.ok){\n        r.json().then((user) => setUser(user));\n      } else {\n        r.json().then((err) => console.log(err.error));\n      }\n    });\n  }\n\n\n  return (\n    <div>\n      {/* Log In Form */}\n      <h1> Log In </h1>\n      <form onSubmit={handleLoginSubmit}>\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" autoComplete=\"off\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n        <input type=\"text\" name=\"password\" placeholder=\"Password\" autoComplete=\"off\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n        <button> Submit </button>\n      </form>\n      {/* Sign Up Form */}\n      <h1> Or Create an Account </h1>\n      <form onSubmit={handleSignupSubmit}>\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" autoComplete=\"off\" value={newUsername} onChange={(e) => setNewUsername(e.target.value)} />\n        <input type=\"text\" name=\"password\" placeholder=\"Password\" autoComplete=\"off\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\n        <input type=\"text\" name=\"password_confirmation\" placeholder=\"Confirm Password\" autoComplete=\"off\" value={passwordConfirm} onChange={(e) => setPasswordConfirm(e.target.value)} />\n        <button> Create Account </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Auth;","function Title() {\n  return (\n    <h1> LINER NOTES </h1>\n  );\n}\n\nexport default Title;","import {NavLink} from \"react-router-dom\";\n\n\nfunction NavBar(){\n  return (\n    <div className=\"Nav\">\n      <NavLink\n        to=\"/tracklist\"\n      >\n        TRACKLIST\n      </NavLink>\n      <NavLink\n        to=\"/notes\"\n      >\n        NOTES\n      </NavLink>\n      <NavLink\n        to=\"/albums\"\n      >\n        ALBUMS\n      </NavLink>\n      <NavLink\n        to=\"/profile\"\n      >\n        PROFILE\n      </NavLink>\n    </div>\n  );\n}\n\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\n\nfunction EditSong({song, setIsEditing, handleUpdateSong}) {\n  const [name, setName] = useState(song.name);\n  const [album_id, setAlbum_Id] = useState(song.album_id);\n  const [artist, setArtist] = useState(song.artist);\n  const [spotify_link, setSpotify_Link] = useState(song.spotify_link);\n  const [is_writer, setIs_Writer] = useState(song.is_writer);\n  const [is_performer, setIs_Performer] = useState(song.is_performer);\n  const [is_producer, setIs_Producer] = useState(song.is_producer);\n  const [is_engineer, setIs_Engineer] = useState(song.is_engineer);\n  const [albums, setAlbums] = useState([]);\n\n  function handleUpdateSubmit(e) {\n    e.preventDefault();\n    let updatedSong = {\n      \"name\": name,\n      \"album_id\": album_id,\n      \"artist\": artist,\n      \"spotify_link\": spotify_link,\n      \"is_writer\": is_writer,\n      \"is_performer\": is_performer,\n      \"is_producer\": is_producer,\n      \"is_engineer\": is_engineer\n    };\n    fetch(`/api/songs/${song.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedSong)\n    })\n    .then(r => {\n      if(r.ok) {\n        r.json().then((updatedSong) => handleUpdateSong(updatedSong))\n        setIsEditing(false)\n      } else {\n        r.json().then((err) => console.log(err.errors));\n      }\n    });\n  }\n\n  // Retrieve albums for select\n  useEffect(() => {\n    fetch('/api/albums')\n      .then((r) => r.json())\n      .then((albums) => setAlbums(albums));\n  }, []);\n\n\n  return (\n    <div>\n      <form onSubmit={handleUpdateSubmit}>\n        <label>\n          <input type=\"text\" name=\"name\" placeholder=\"Song Name\" value={name} onChange={(e) => setName(e.target.value)}/>\n\n          <select className=\"album-select\" placeholder=\"Choose Album\" value={album_id ? album_id : \"\"} onChange={(e) => setAlbum_Id(e.target.value)}>\n              <option disabled={true} value=\"\">-Choose an Album-</option>\n              {albums.map((album) => (\n                <option key={album.id} value={album.id}>{album.title}</option>\n              ))}\n          </select>\n\n          <input type=\"text\" name=\"artist\" placeholder=\"Artist\" value={artist} onChange={(e) => setArtist(e.target.value)}/>\n\n          <input type=\"text\" name=\"spotify\" placeholder=\"Spotify Link\" value={spotify_link} onChange={(e) => setSpotify_Link(e.target.value)} />\n\n          <input type=\"checkbox\" name=\"writer\" value={is_writer} onChange={(e) => setIs_Writer(!is_writer)}  checked={is_writer ? true : false}/>\n          <label> Writer </label>\n\n          <input type=\"checkbox\" name=\"performer\" value={is_performer} onChange={(e) => setIs_Performer(!is_performer)} checked={is_performer ? true : false}/>\n          <label> Performer </label>\n\n          <input type=\"checkbox\" name=\"producer\" value={is_producer} onChange={(e) => setIs_Producer(!is_producer)} checked={is_producer ? true : false}/>\n          <label> Producer </label>\n\n          <input type=\"checkbox\" name=\"engineer\" value={is_engineer} onChange={(e) => setIs_Engineer(!is_engineer)} checked={is_engineer ? true : false} />\n          <label> Engineer </label>\n          <button> Save </button>\n        </label>\n      </form>\n      <button onClick={() => setIsEditing(false)}> Exit </button>\n    </div>\n  );\n}\n\nexport default EditSong;\n\n\n","import React, {useState} from \"react\";\nimport EditSong from \"./EditSong\";\n\nfunction Song({song, handleDeleteSong, handleUpdateSong}) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Delete Song\n  function handleDeleteSubmit(){\n    fetch(`/api/songs/${song.id}`, {\n      method: \"DELETE\"\n    });\n    handleDeleteSong(song.id)\n  };\n\n\n  return (\n    <div className=\"Song\">\n      <h1>\"{song.name}\"</h1>\n      <h2>{song.artist}</h2>\n      {song.album ? <h3><em>{song.album.title}</em></h3> : \"\"}\n      {song.album ? <img src={song.album.artwork_url} alt=\"Album Artwork\" width=\"75\" height=\"75\"/> : \"\"}\n      <ul>{song.spotify_link}</ul>\n      {song.is_writer ? <h4>Writer</h4> : \"\"}\n      {song.is_performer ? <h4>Performer</h4> : \"\"}\n      {song.is_producer ? <h4>Producer</h4> : \"\"}\n      {song.is_engineer ? <h4>Engineer</h4> : \"\"}\n      {isEditing ? (\n        <EditSong song={song} setIsEditing={setIsEditing} handleUpdateSong={handleUpdateSong}/>\n      ) : (\n        <button onClick={() => setIsEditing(true)}>Edit</button>\n      )}\n      <button onClick={handleDeleteSubmit}>\n        <div role=\"img\" aria-label=\"delete\"> 🗑 </div>\n      </button>\n    </div>\n  );\n}\n\nexport default Song;\n\n\n\n","import React, {useState, useEffect} from \"react\";\n\nfunction AddSong({setShowAddSong, addNewSong}) {\n  const [name, setName] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [spotify, setSpotify] = useState(\"\");\n  // Add release_date ?\n  const [is_writer, setIs_Writer] = useState(false);\n  const [is_performer, setIs_Performer] = useState(false);\n  const [is_producer, setIs_Producer] = useState(false);\n  const [is_engineer, setIs_Engineer] = useState(false);\n  const [albums, setAlbums] = useState([]);\n  const [album_id, setAlbum_Id] = useState(\"\");\n\n  // Retrieve albums for select\n  useEffect(() => {\n    fetch('/api/albums')\n      .then((r) => r.json())\n      .then((albums) => setAlbums(albums));\n  }, []);\n\n  // console.log(albums)\n\n\n  // Submit New Song\n  function handleAddSongSubmit(e) {\n    e.preventDefault();\n    let newSongData = {\n      \"name\": name,\n      \"artist\": artist,\n      \"spotify_link\": spotify,\n      \"is_writer\": is_writer,\n      \"is_performer\": is_performer,\n      \"is_producer\": is_producer,\n      \"is_engineer\": is_engineer,\n      \"album_id\": album_id\n    };\n    fetch(\"/api/songs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newSongData)\n    })\n    .then(r => {\n      if(r.ok) {\n        r.json().then((newSong) => addNewSong(newSong));\n        e.target.reset();\n        setShowAddSong(false);\n      } else {\n        r.json().then((err) => console.log(err.errors));\n      }\n    });\n  }\n\n\n  return (\n    <div className=\"Forms\">\n      <form onSubmit={handleAddSongSubmit}>\n        {/* Song Form */}\n        <label>\n          <input type=\"text\" name=\"name\" placeholder=\"Song Name\" value={name} onChange={(e) => setName(e.target.value)} autoComplete=\"off\"/>\n          <input type=\"text\" name=\"artist\" placeholder=\"Artist\" value={artist} onChange={(e) => setArtist(e.target.value)} autoComplete=\"off\"/>\n          <input type=\"text\" name=\"spotify_url\" placeholder=\"Spotify Link\" value={spotify} onChange={(e) => setSpotify(e.target.value)} autoComplete=\"off\"/>\n        </label>\n\n        {/* Involvement Form */}\n        <label>\n          <h4> Involvement: </h4>\n          <input type=\"checkbox\" name=\"writer\" value={is_writer} onChange={(e) => setIs_Writer(!is_writer)} />\n          <label> Writer </label>\n          <input type=\"checkbox\" name=\"performer\" value={is_performer} onChange={(e) => setIs_Performer(!is_performer)} />\n          <label> Performer </label>\n          <input type=\"checkbox\" name=\"producer\" value={is_producer} onChange={(e) => setIs_Producer(!is_producer)}/>\n          <label> Producer </label>\n          <input type=\"checkbox\" name=\"engineer\" value={is_engineer} onChange={(e) => setIs_Engineer(!is_engineer)} />\n          <label> Engineer </label>\n        </label>\n\n        {/* Album Form */}\n        <label>\n          <h4> Album </h4>\n          <select className=\"album-select\" placeholder=\"Choose Album\" value={album_id} onChange={(e) => setAlbum_Id(e.target.value)}>\n            <option disabled={true} value=\"\">-Choose an Album-</option>\n            {albums.map((album) => (\n              <option key={album.id} value={album.id}>{album.title}</option>\n            ))}\n          </select>\n        </label>\n        <label>\n          <button> Add Song </button>\n        </label>\n      </form>\n      <button onClick={() => setShowAddSong(false)}> Return to Tracklist </button>\n    </div>\n  );\n}\n\nexport default AddSong;","import React, { useEffect, useState } from \"react\";\nimport Song from \"./Song\";\nimport AddSong from \"./AddSong\";\n\nfunction Tracklist() {\n  const [songs, setSongs] = useState([]);\n  const [showAddSong, setShowAddSong] = useState(null);\n\n  // Get Song List\n  useEffect(() => {\n    fetch('/api/songs')\n      .then((r) => r.json())\n      .then((songs) => setSongs(songs));\n  }, []);\n\n  // Add Song Form\n  function showAddSongForm(){\n    setShowAddSong(true)\n  };\n\n  // Add Song to DOM\n  function addNewSong(newSong){\n    setSongs([newSong, ...songs]);\n  };\n\n  // Delete Song from DOM\n  function handleDeleteSong(id){\n    const updatedSongs = songs.filter((song) => song.id !== id);\n    setSongs(updatedSongs)\n  };\n\n  // Update Song in DOM\n  function handleUpdateSong(updatedSong) {\n    const updatedSongs = songs.map((song) => {\n      if (song.id === updatedSong.id) {\n        return updatedSong\n      } else {\n        return song;\n      }\n    });\n    setSongs(updatedSongs);\n  };\n\n  // Search Songs\n\n\n  if(showAddSong) return <AddSong setShowAddSong={setShowAddSong} addNewSong={addNewSong} />\n\n  return (\n    <div>\n      <button onClick={showAddSongForm}> Add Track </button>\n      {songs.map((song) => (\n        <Song\n          key={song.id}\n          song={song}\n          handleDeleteSong={handleDeleteSong}\n          handleUpdateSong={handleUpdateSong}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Tracklist;","\nfunction Note({note}) {\n\n  let datestamp = note.created_at.split(\"T\")[0];\n\n  return (\n    <div className=\"Note\">\n      <h3> Note for {note.song ? `\"${note.song.name}\"` : \"(SONG DELETED)\"} on {datestamp}: </h3>\n      <p>{note.text}</p>\n    </div>\n  );\n}\n\nexport default Note;","import React, {useState, useEffect} from \"react\";\n\nfunction AddNote({setShowAddNotes, addNewNote}) {\n  const [text, setText] = useState(\"\")\n  const [songs, setSongs] = useState([]);\n  const [song_id, setSong_Id] = useState(\"\")\n\n\n  // Retrieve songs\n  useEffect(() => {\n    fetch('/api/songs')\n      .then((r) => r.json())\n      .then((songs) => setSongs(songs));\n  }, []);\n\n  // console.log(songs)\n\n  // Submit new note\n  function handleAddNoteSubmit(e) {\n    e.preventDefault();\n    let newNoteData = {\n      \"text\": text,\n      \"song_id\": song_id\n    };\n    fetch(\"/api/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newNoteData)\n    })\n    .then(r => {\n      if(r.ok) {\n        r.json().then((newNote) => addNewNote(newNote));\n        e.target.reset();\n        setShowAddNotes(false);\n      } else {\n        r.json().then((err) => console.log(err.errors));\n      }\n    });\n  }\n\n\n\n  return (\n    <div className=\"Forms\">\n      <form onSubmit={handleAddNoteSubmit}>\n        {/* Song Select */}\n        <label>\n          <select className=\"song-select\" placeholder=\"Choose A Song\" value={song_id} onChange={(e) => setSong_Id(e.target.value)}>\n            <option disabled={true} value=\"\"> -Choose a Song- </option>\n            {songs.map((song) => (\n              <option key={song.id} value={song.id}>{song.name}</option>\n            ))}\n          </select>\n          {/* Text */}\n          <textarea name=\"text\" placeholder=\"New Note\" style={{width:\"350px\", height:\"120px\", resize: \"none\"}}value={text} onChange={(e) => setText(e.target.value)}/>\n          <button> Add Note </button>\n        </label>\n      </form>\n      <button onClick={() => setShowAddNotes(false)}> Return to Notes </button>\n    </div>\n  );\n}\n\nexport default AddNote;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nfunction Notes() {\n  const [notes, setNotes] = useState([]);\n  const [showAddNotes, setShowAddNotes] = useState(false);\n\n  // Get Notes\n  useEffect(() => {\n    fetch('/api/notes')\n      .then((r) => r.json())\n      .then((notes) => setNotes(notes))\n  }, []);\n\n  // Show Add Note Form\n  function showAddNoteForm(){\n    setShowAddNotes(true)\n  };\n\n  // Add New Note to DOM\n  function addNewNote(newNote) {\n    setNotes([newNote, ...notes]);\n  };\n\n  if(showAddNotes) return <AddNote setShowAddNotes={setShowAddNotes} addNewNote={addNewNote}/>\n\n  return (\n    <div className=\"Lists\">\n      <button onClick={showAddNoteForm}> Add Note </button>\n      {notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Notes;","\nfunction Album({album, handleDeleteAlbum}) {\n\n  // Delete Album\n  function handleDeleteSubmit(){\n    fetch(`/api/albums/${album.id}`, {\n      method: \"DELETE\"\n    });\n    handleDeleteAlbum(album.id)\n  };\n\n  // console.log(album)\n\n  return (\n    <div className=\"AlbumList\">\n      <h1><em>{album.title}</em> {album.release_date ? `(${album.release_date})` : \"\"}</h1>\n      <h2>{album.artist}</h2>\n      <h4>{album.genre}</h4>\n      <img src={album.artwork_url} alt=\"Album Artwork\" width=\"400\" height=\"400\"/>\n      <h3> Songs: </h3>\n      {album.songs.map(song => <h4 key={song.id}>{song.name}</h4>)}\n      <button onClick={handleDeleteSubmit}>\n        <div role=\"img\" aria-label=\"delete\"> 🗑 </div>\n      </button>\n    </div>\n\n  );\n}\n\nexport default Album;","import React, {useState} from \"react\";\n\nfunction AddAlbum({setShowAddAlbum, addNewAlbum}) {\n  const [title, setTitle] = useState(\"\");\n  const [artwork,setArtwork] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [spotify, setSpotify] = useState(\"\");\n  const [releaseDate, setReleaseDate] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n\n\n  // Submit New Album\n  function handleAddAlbumSubmit(e) {\n    e.preventDefault();\n    let newAlbumData = {\n      \"title\": title,\n      \"artwork_url\": artwork,\n      \"artist\": artist,\n      \"spotify_link\": spotify,\n      \"release_date\": releaseDate,\n      \"genre\": genre\n    };\n    fetch(\"/api/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newAlbumData)\n    })\n    .then(r => {\n      if(r.ok) {\n        r.json().then((newAlbum) => addNewAlbum(newAlbum));\n        e.target.reset();\n        setShowAddAlbum(false);\n      } else {\n        r.json().then((err) => console.log(err.errors));\n      }\n    });\n  }\n\n\n  return (\n    <div>\n      <form onSubmit={handleAddAlbumSubmit}>\n        <label>\n          <input type=\"text\" value={title} placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} autoComplete=\"off\" />\n          <input type=\"text\" value={artist} placeholder=\"Artist\" onChange={(e) => setArtist(e.target.value)} autoComplete=\"off\" />\n          <input type=\"text\" value={artwork} placeholder=\"Artwork URL\" onChange={(e) => setArtwork(e.target.value)} autoComplete=\"off\" />\n          <input type=\"text\" value={spotify} placeholder=\"Spotify Link\" onChange={(e) => setSpotify(e.target.value)} autoComplete=\"off\" />\n          <input type=\"text\" value={releaseDate} placeholder=\"Release Date(YYYY)\" onChange={(e) => setReleaseDate(e.target.value)} autoComplete=\"off\" />\n          <input type=\"text\" value={genre} placeholder=\"Genre\" onChange={(e) => setGenre(e.target.value)} autoComplete=\"off\" />\n          <button> Add Album </button>\n        </label>\n      </form>\n      <button onClick={() => setShowAddAlbum(false)}> Return to Albums </button>\n    </div>\n  );\n}\n\nexport default AddAlbum;","import React, { useState, useEffect } from \"react\";\nimport Album from \"./Album\";\nimport AddAlbum from \"./AddAlbum\";\n\nfunction AlbumList() {\n  const [albums, setAlbums] = useState([])\n  const [showAddAlbum, setShowAddAlbum] = useState(null);\n\n  // Get Album List\n  useEffect(() => {\n    fetch('/api/albums')\n      .then((r) => r.json())\n      .then((albums) => setAlbums(albums));\n  }, []);\n\n  // Search Albums\n\n  // Add Album Form\n  function showAddAlbumForm(){\n    setShowAddAlbum(true)\n  };\n\n  // Add Album to DOM\n  function addNewAlbum(newAlbum) {\n    setAlbums([newAlbum, ...albums]);\n  };\n\n  // Delete Album from DOM\n  function handleDeleteAlbum(id) {\n    const updatedAlbums = albums.filter((album) => album.id !== id);\n    setAlbums(updatedAlbums)\n  }\n\n  if(showAddAlbum) return <AddAlbum setShowAddAlbum={setShowAddAlbum} addNewAlbum={addNewAlbum} />\n\n  return (\n    <div className=\"Lists\">\n      <button onClick={showAddAlbumForm}> Add Album </button>\n      {albums.map((album) => (\n        <Album\n          key={album.id}\n          album={album}\n          handleDeleteAlbum={handleDeleteAlbum}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default AlbumList;","\nfunction Profile({user, setUser}) {\n\n  // window.location.reload();\n\n  // Log Out\n  function handleLogout() {\n    fetch(\"/api/logout\", {\n      method: \"DELETE\",\n    }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    })\n  }\n\n\n\n\n  return (\n    <div className=\"Profile\">\n      <h1> Welcome, {user.username}! </h1>\n      <h4> You have logged {user.songs ? user.songs.length : \"\"} songs </h4>\n      <h4> and </h4>\n      <h4> {user.albums ? user.albums.length : \"0\"} albums </h4>\n      <button onClick={() => handleLogout()}> Log Out </button>\n    </div>\n  );\n}\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Auth from \"./Auth\";\nimport Title from \"./Title\";\nimport NavBar from \"./NavBar\";\nimport Tracklist from \"./Tracklist\";\nimport Notes from \"./Notes\";\nimport AlbumList from \"./AlbumList\";\nimport Profile from \"./Profile\";\nimport '../App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n\n\n  // Stay Logged In:\n  useEffect(() => {\n    fetch(\"/api/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  // console.log(user)\n\n\n  if(!user) return (\n    <div className=\"App\">\n      <Title />\n      <Auth user={user} setUser={setUser}/>\n    </div>\n\n  )\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <NavBar />\n      <Routes>\n        <Route exact path=\"/tracklist\" element={<Tracklist />}/>\n        <Route exact path=\"/notes\" element={<Notes />}/>\n        <Route exact path=\"/albums\" element={<AlbumList />}/>\n        <Route exact path=\"/profile\" element={<Profile user={user} setUser={setUser}/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}